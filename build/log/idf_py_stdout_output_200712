[1/11] Performing build step for 'bootloader'
[1/1] cd /root/esp_project/hello_world/build/bootloader/esp-idf/esptool_py && /root/.espressif/python_env/idf5.2_py3.10_env/bin/python /root/esp/v5.2/esp-idf/components/partition_table/check_sizes.py --offset 0x8000 bootloader 0x0 /root/esp_project/hello_world/build/bootloader/bootloader.bin
Bootloader binary size 0x5170 bytes. 0x2e90 bytes (36%) free.
[2/9] Building CXX object esp-idf/main/CMakeFiles/__idf_main.dir/main.cpp.obj
[3/9] Linking C static library esp-idf/main/libmain.a
[4/9] Building CXX object esp-idf/oled/CMakeFiles/__idf_oled.dir/oled.cpp.obj
/root/esp_project/hello_world/components/oled/oled.cpp: In member function 'void Oled::point(uint8_t, uint8_t, uint8_t)':
/root/esp_project/hello_world/components/oled/oled.cpp:715:9: warning: comparison is always false due to limited range of data type [-Wtype-limits]
  715 |   if (x < 0 || x >= WIDTH || y < 0 || y >= HEIGHT)
      |       ~~^~~
/root/esp_project/hello_world/components/oled/oled.cpp:715:32: warning: comparison is always false due to limited range of data type [-Wtype-limits]
  715 |   if (x < 0 || x >= WIDTH || y < 0 || y >= HEIGHT)
      |                              ~~^~~
[5/9] Linking C static library esp-idf/oled/liboled.a
[6/9] Generating ld/sections.ld
[7/9] Linking CXX executable hello_world.elf
[8/9] Generating binary image from built executable
esptool.py v4.7.0
Creating esp32c3 image...
Merged 2 ELF sections
Successfully created esp32c3 image.
Generated /root/esp_project/hello_world/build/hello_world.bin
[9/9] cd /root/esp_project/hello_world/build/esp-idf/esptool_py && /root/.espressif/python_env/idf5.2_py3.10_env/bin/python /root/esp/v5.2/esp-idf/components/partition_table/check_sizes.py --offset 0x8000 partition --type app /root/esp_project/hello_world/build/partition_table/partition-table.bin /root/esp_project/hello_world/build/hello_world.bin
hello_world.bin binary size 0x32290 bytes. Smallest app partition is 0x100000 bytes. 0xcdd70 bytes (80%) free.
